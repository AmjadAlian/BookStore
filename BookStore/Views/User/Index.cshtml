@using BookStore.ViewModel
@model List<ApplicationUserVM>
@section MainTitle {
Book
}
@section Title {
    @("Home")
}
@section SubTitle {
    @("Home")
}
@section CardTitle {
    @("Users")
}
@section Buttons {
    @if (User.Identity.IsAuthenticated)
    {
        <a asp-controller="User" asp-action="Create" class="btn btn-outline-primary"><i class="far fa-plus-square"></i> Create </a>
    }

    
}



@if (!Model.Any())
{
    <div class="card-body">
        <tr>
            <td colspan="2">
                <div class="alert alert-info alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                    <h5><i class="icon fas fa-info"></i> Alert!</h5>
                    No Data Found.
                </div>
            </td>
        </tr>
    </div>
}
else
{
    <div class="card-body">


        <table class="table table-bordered">
            <thead>
                <tr>
                    <th >Name</th>
                    <th>Address</th>                 
                    <th>PhoneNumber</th>
                    <th>Email</th>
                    <th>Roles</th>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <th>Action</th>
                    }
                </tr>
            </thead>
            <tbody>


                @foreach (var item in @Model)
                {
                    <tr>
                       
                        <td>@item.UserName</td>
                        <td>
                            @item.Address
                        </td>
                        <td>
                            @item.PhoneNumber
                        </td>
                        <td>@item.Email</td>
                        <td>@(item.Roles != null ? string.Join(",", item.Roles) : "No Roles")</td>
                        

                     
                    </tr>
                }



            </tbody>
        </table>
    </div>
}

@section Script {
    <script>
        document.querySelectorAll(".js-delete").forEach((btn) => {

            const id = btn.dataset.id;


            btn.addEventListener("click", async () => {

                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const response = await fetch(`/User/Delete/${id}`, { method: "POST" });

                        if (response.ok) {

                            const Toast = Swal.mixin({
                                toast: true,
                                position: 'top-end',

                                customClass: {
                                    popup: 'colored-toast',
                                },
                                showConfirmButton: false,
                                timer: 2000,
                                timerProgressBar: true,
                            })



                            btn.closest("tr").remove();
                            Toast.fire({
                                icon: 'success',
                                title: 'Category Deleted Successfully',
                            })


                        }

                    }
                });







            });

        });



    </script>
}